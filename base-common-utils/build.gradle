plugins {
    id 'se.patrikerdes.use-latest-versions' version '0.2.14'
    id 'com.github.ben-manes.versions' version '0.28.0'
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}

group = 'cn.ly'
version = '1.1.4-SNAPSHOT'

targetCompatibility = 1.8
sourceCompatibility = 1.8

[compileJava, compileTestJava].each() {
    //it.options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation", "-Xlint:-options"]
    it.options.compilerArgs += ["-Xlint:deprecation"]
    it.options.encoding = "UTF-8"
}

dependencyReport {
    projects = project.allprojects
    outputFile = file("$buildDir/reports/dependencies.txt")
}

htmlDependencyReport {
    projects = project.allprojects
    reports.html.setDestination(file("/Users/liaomengge/Desktop/doc/jar"))
}

//jar {
//    manifest {
//        attributes(
//                "Created-By": "liaomengge",
//                "Implementation-Title": project.name,
//                "Implementation-Version": project.version
//        )
//        writeTo(file("src/main/resources/META-INF/$project.group/$project.name/version.properties"))
//    }
//}
//
//task sourcesJar(type: Jar, dependsOn: classes) {
//    archiveClassifier.set('sources')
//    from sourceSets.main.allSource
//}
//
//javadoc {
//    options {
//        encoding "UTF-8"
//        charSet 'UTF-8'
//        author true
//        version true
//        failOnError false
//        links "http://docs.oracle.com/javase/8/docs/api"
//    }
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    archiveClassifier.set('javadoc')
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

ext {
    nexusUrl = version.endsWith("-SNAPSHOT") ?
            "http://127.0.0.1:8089/repository/fly-snapshots/" :
            "http://127.0.0.1:8089/repository/fly-releases/"
}

dependencies {
    api "org.springframework:spring-core"
    api "org.springframework:spring-beans"
    api "org.springframework:spring-web"
    api "org.springframework:spring-context"
    api "org.springframework:spring-context-support"
    api "org.springframework:spring-jdbc"
    api "org.springframework.data:spring-data-redis"
    api "org.springframework.retry:spring-retry"

    api "org.springframework.boot:spring-boot"

    api "org.slf4j:slf4j-api"
    api "org.apache.logging.log4j:log4j-slf4j-impl"
    api "org.apache.logging.log4j:log4j-core"
    api "org.apache.logging.log4j:log4j-web"

    api "com.fasterxml.jackson.core:jackson-databind"
    api "com.fasterxml.jackson.core:jackson-core"
    api "com.fasterxml.jackson.core:jackson-annotations"

    api "org.aspectj:aspectjrt"
    api "org.aspectj:aspectjweaver"

    api "org.apache.httpcomponents:httpclient"
    api "org.apache.httpcomponents:httpmime"
    api "org.apache.httpcomponents:httpasyncclient"
    api "org.apache.httpcomponents:httpcore"

    api "org.hibernate.validator:hibernate-validator"

    api "com.timgroup:java-statsd-client"

    api "redis.clients:jedis"

    api "org.apache.commons:commons-pool2"

    api "com.thoughtworks.xstream:xstream"

    /****************************************************华丽的分割线***************************************************/

    api "com.sun.mail:jakarta.mail"

    api "com.google.guava:guava"

    api "com.github.ben-manes.caffeine:caffeine"
    api "com.github.ben-manes.caffeine:guava"
    api "com.github.ben-manes.caffeine:jcache"

    api "com.squareup.okhttp3:okhttp"

    api("org.apache.curator:curator-recipes") {
        exclude(group: 'org.apache.zookeeper', module: 'zookeeper')
    }

    /****************************************************华丽的分割线***************************************************/

    api "javax.ws.rs:javax.ws.rs-api"
    api "javax.servlet:javax.servlet-api"

    api "commons-io:commons-io"
    api "org.apache.commons:commons-lang3"
    api "commons-beanutils:commons-beanutils"
    api "org.apache.commons:commons-compress"
    api "org.apache.commons:commons-text"
    api "org.apache.commons:commons-collections4"

    api "com.alibaba:fastjson"
    api "net.sourceforge.jexcelapi:jxl"

    api "de.ruedigermoeller:fst"
    api "com.dyuproject.protostuff:protostuff-core"
    api "com.dyuproject.protostuff:protostuff-runtime"

    api "com.101tec:zkclient"

    api("net.javacrumbs.future-converter:future-converter-spring-java8") {
        transitive = false
    }
    api("net.javacrumbs.future-converter:future-converter-spring-guava") {
        transitive = false
    }
    api("net.javacrumbs.future-converter:future-converter-java8-guava") {
        transitive = false
    }
    api("com.spotify:futures-extra") {
        transitive = false
    }

    api "tk.mybatis:mapper"
    api "org.mybatis:mybatis"
    api "org.mybatis:mybatis-spring"
    api "com.github.pagehelper:pagehelper"
    api "com.alibaba:druid"

    api "org.redisson:redisson"

    api "it.sauronsoftware.ftp4j:ftp4j"

    api("com.squareup.retrofit2:retrofit") {
        exclude(group: 'com.squareup.okhttp3', module: 'okhttp')
    }
    api("org.ligboy.retrofit2:converter-fastjson") {
        exclude(group: 'com.squareup.retrofit2', module: 'retrofit')
    }
    api "com.squareup.retrofit2:converter-scalars"
    api "com.squareup.retrofit2:converter-jackson"

    api "com.lmax:disruptor"

    api "com.taobao.text:text-ui"

    api "com.alibaba.csp:sentinel-core"
    api "com.alibaba:transmittable-thread-local"
    api "com.alibaba:log4j2-ttl-thread-context-map"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation "junit:junit"
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: nexusUrl) {
                authentication(userName: "fly", password: "fly123")
            }
            pom.version = "$project.version"
            pom.groupId = "$project.group"
        }
    }
}